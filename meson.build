project(
    'f2py_examples',
    'c',
    version : '0.1',
    license: 'BSD-3',
    meson_version: '>=0.64.0',
    default_options : ['warning_level=2'],
)

add_languages('fortran')

## find python installation
py_mod = import('python')
py = py_mod.find_installation(pure: false)
py_dep = py.dependency()

## get include directories necessary to link to fortran python
## extensions
include_dir_numpy = run_command(
    py,
    ['-c', 'import os; os.chdir(".."); import numpy; print(numpy.get_include())'],
    check : true).stdout().strip()
include_dir_f2py = run_command(
    py,
    ['-c', 'import os; os.chdir(".."); import numpy.f2py; print(numpy.f2py.get_include())'],
    check : true).stdout().strip()
include_dirs = include_directories(include_dir_numpy, include_dir_f2py)

## the name of the extension module
fortran_extension_name = 'fortran_tools'

## the f90 source files
fortran_sources = [fortran_extension_name+'.f90']

## the sources generated by f2py
f2py_generated_sources = custom_target('fortran_toolsmodule.c',
  input : [fortran_sources],
  output : [fortran_extension_name+'module.c', fortran_extension_name+'-f2pywrappers2.f90'],
  command : [py,'-m', 'numpy.f2py', '@INPUT@', '-m', fortran_extension_name, '--lower'],
)

## compile the extension
py.extension_module(
    fortran_extension_name,
    [fortran_sources, f2py_generated_sources],
    include_dir_f2py / 'fortranobject.c',
    include_directories: include_dirs,
    dependencies : py_dep,
    install : true,
    fortran_args: ['-ffree-line-length-none','-O3','-Wall'],
    link_args: ['-llapack', ],
)

